swagger: "2.0"
info:
  version: "0.0.1"
  title: REST API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: Para acceder a la API se requiere un JWT en el header 'Authorization'
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
security:
  - Bearer: []
paths:
  /auth:
    x-swagger-router-controller: auth
    post:
      operationId: auth
      description: Autentica usuario para usar la API
      security: []
      parameters:
        - name: authentication
          in: body
          required: true
          schema:
            $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Token"
        "403":
          description: Access Denied
          schema:
            $ref: "#/definitions/ErrorResponse"
  /posts:
    # Controller
    x-swagger-router-controller: post
    get:
      operationId: findAll
      description: Devuelve lista de Posts
      # Respuesta exitosa para estado 200 y error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetPostsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: create
      description: Agrega nuevo post a la lista
      parameters:
        - name: post
          description: Propiedades de post
          in:  body
          required: true
          schema:
            $ref: "#/definitions/Post"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Post"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /posts/{id}:
    x-swagger-router-controller: post
    get:
      operationId: findById
      description: Obtiene un post
      parameters:
        - name: id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetPostResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: update
      description: Actualiza un post
      parameters:
        - name: id
          description: ID del post
          type: number
          in: path
          required: true
        - name: post
          description: Post a actualizar
          in: body
          required: true
          schema:
            $ref: "#/definitions/Post"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: destroy
      description: Elimina un post
      parameters:
        - name: id
          description: ID del post
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  GetPostsListResponse:
    required:
      - posts
    properties:
      posts:
        type: array
        items:
          type: object
          properties:
            userId:
              type: number
            id:
              type: number
            title:
              type: string
            body:
              type: string
  Post:
    type: object
    properties:
      id:
        type: number
        description: id del post
      userId:
        type: number
        description: id del usuario propietario del post
      title:
        type: string
        description: Titulo del post
      body:
        type: string
        description: Contenido del post
    required:
      - title
      - body
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: Codigo 1 para exito
      description:
        type: string
        description: Comentario sobre respuesta
    required:
      - success
      - description
  GetPostResponse:
    required:
      - id
      - title
      - body
    properties:
      id:
        type: number
      title:
        type: string
      body:
        type: string
  Authentication:
    type: object
    properties:
      username:
        type: string
        description: Nombre de usuario
      password:
        type: string
        description: Password de usuario
  Token:
    type: object
    properties:
      message:
        type: string
        description: Mensaje de la operacion
      token:
        type: string
        description: Token JWT para acceder a rutas protegidas
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
